# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fav_window_v2.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sqlite3

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
import re

from myui_v5 import Ui_MainWindow

dbfile = "J_VarietyShow.db"


class Ui_FavWindow2(object):


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("FavWindow")
        MainWindow.resize(500, 449)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(70, 310, 271, 30))
        self.lineEdit.setObjectName("lineEdit")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(145, 20, 211, 16))
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(360, 310, 82, 25))
        self.pushButton.setObjectName("pushButton")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(10, 350, 491, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(20, 40, 461, 261))
        self.tableWidget.setAlternatingRowColors(False)
        self.tableWidget.setColumnCount(2)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setRowCount(0)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(120, 370, 261, 25))
        self.pushButton_2.setObjectName("pushButton_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 500, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.chkBoxItem = QtWidgets.QTableWidgetItem()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "我的收藏關鍵字"))
        self.pushButton.setText(_translate("MainWindow", "新增收藏"))
        self.pushButton.clicked.connect(self.add_listItem)
        self.tableWidget.setSortingEnabled(True)
        self.pushButton_2.setText(_translate("MainWindow", "我選好了!"))
        self.pushButton_2.clicked.connect(self.passtoMain)

        self.tableWidget.setHorizontalHeaderLabels(['搜尋勾選', '關鍵字'])

        conn = sqlite3.connect(dbfile)
        datas = conn.execute("select Keyword from Fav;")

        for row_num, row_data in enumerate(datas):
            self.tableWidget.insertRow(row_num)
            for column_num, data in enumerate(row_data):
                self.chkBoxItem = QtWidgets.QTableWidgetItem()
                self.chkBoxItem.setCheckState(QtCore.Qt.Unchecked)
                self.tableWidget.setItem(row_num, column_num, self.chkBoxItem)
                self.tableWidget.setItem(row_num, column_num + 1, QtWidgets.QTableWidgetItem(str(data)))

        conn.close()



    def add_listItem(self):
        addinput = self.lineEdit.text()
        conn = sqlite3.connect(dbfile)
        sql_str = "Insert into Fav(Keyword) values('{}');".format(addinput)
        conn.execute(sql_str)
        conn.commit()
        conn.close()

        QApplication.processEvents()


    def passtoMain(self):

        pass_list = []
        for row in range(0, self.tableWidget.rowCount()):
            chkstateitem = self.tableWidget.item(row, 0)
            item = self.tableWidget.item(row, 1)
            if chkstateitem.checkState() != 0:
                pass_list.append(item.text())
                # MyMainWindow.passedKeyword()
        for s in pass_list:
            print('pass：'+ s)

        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self.window)
        # self.window.show()




class MyFavWindow(QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        super(MyFavWindow, self).__init__(parent)
        self.setupUi(self)

if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)

    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_FavWindow2()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
